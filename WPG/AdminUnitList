import java.io.*;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;

public class AdminUnitList {
    List<AdminUnit> units = new ArrayList<>();
    public void read(String filename) throws IOException {
        CSVReader reader = new CSVReader(filename,",",true);
        while(reader.next()) {
            AdminUnit adm = new AdminUnit();
            String name = reader.get("name");
            int adl = reader.getInt("admin_level");
            double pop = reader.getDouble("population");
            double area = reader.getDouble("area");
            double density = reader.getDouble("density");
            adm.name=name;
            adm.adminLevel=adl;
            adm.population=pop;
            adm.area=area;
            adm.density=density;
            units.add(adm);
        }
    }


    /**
     * Wypisuje zawartość korzystając z AdminUnit.toString()
     * @param out
     */
    void list(PrintStream out){
        for (int i=0;i<units.size();i++){
            out.printf(units.toString());
        }

    }
    /**
     * Wypisuje co najwyżej limit elementów począwszy od elementu o indeksie offset
     * @param out - strumień wyjsciowy
     * @param offset - od którego elementu rozpocząć wypisywanie
     * @param limit - ile (maksymalnie) elementów wypisać
     */
    void list(PrintStream out,int offset, int limit ){
        int il=0;
        for (int i=offset;i<units.size();i++) {
            if(il<limit){
                out.printf(units.toString());
            }
        }
    }

    /**
     * Zwraca nową listę zawierającą te obiekty AdminUnit, których nazwa pasuje do wzorca
     * @param pattern - wzorzec dla nazwy
     * @param regex - jeśli regex=true, użyj finkcji String matches(); jeśli false użyj funkcji contains()
     * @return podzbiór elementów, których nazwy spełniają kryterium wyboru
     */
    AdminUnitList selectByName(String pattern, boolean regex){
        AdminUnitList ret = new AdminUnitList();
        for (int i=0;i<units.size();i++) {
            AdminUnit spr = new AdminUnit();
            spr=units.get(i);
            if(spr.name==pattern){
                ret.units.add(spr);
            }
        }
        // przeiteruj po zawartości units
        // jeżeli nazwa jednostki pasuje do wzorca dodaj do ret
        return ret;
    }

    public static void main(String[] args) throws IOException {
        PrintStream pw = new PrintStream(System.out);
        AdminUnitList lista = new AdminUnitList();
        lista.read("admin-units.csv");
        lista.list(pw);

    }
}
